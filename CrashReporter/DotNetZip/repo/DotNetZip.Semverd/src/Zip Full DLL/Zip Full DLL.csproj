<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>9.0.30729</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{4F7A9BBE-5221-46C5-9E47-1E8B547CF258}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>Ionic.Zip</RootNamespace>
    <AssemblyName>Ionic.Zip</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <StartupObject>
    </StartupObject>
    <SccProjectName>SAK</SccProjectName>
    <SccLocalPath>SAK</SccLocalPath>
    <SccAuxPath>SAK</SccAuxPath>
    <SccProvider>SAK</SccProvider>
    <FileUpgradeFlags>
    </FileUpgradeFlags>
    <OldToolsVersion>3.5</OldToolsVersion>
    <UpgradeBackupLocation />
    <PublishUrl>publish\</PublishUrl>
    <Install>true</Install>
    <InstallFrom>Disk</InstallFrom>
    <UpdateEnabled>false</UpdateEnabled>
    <UpdateMode>Foreground</UpdateMode>
    <UpdateInterval>7</UpdateInterval>
    <UpdateIntervalUnits>Days</UpdateIntervalUnits>
    <UpdatePeriodically>false</UpdatePeriodically>
    <UpdateRequired>false</UpdateRequired>
    <MapFileExtensions>true</MapFileExtensions>
    <ApplicationRevision>0</ApplicationRevision>
    <ApplicationVersion>1.0.0.%2a</ApplicationVersion>
    <UseApplicationTrust>false</UseApplicationTrust>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>bin\Debug\</OutputPath>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <DocumentationFile>bin\Debug\Ionic.Zip.XML</DocumentationFile>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Release|AnyCPU' ">
    <DebugType>pdbonly</DebugType>
    <Optimize>true</Optimize>
    <OutputPath>bin\Release\</OutputPath>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
    <CodeAnalysisRuleSet>AllRules.ruleset</CodeAnalysisRuleSet>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
  </ItemGroup>
  <Import Project="$(MSBuildToolsPath)\Microsoft.CSharp.targets" />
  <Target Name="Compile">
    <!-- Outputs="$(IntermediateOutputPath)$(TargetFileName)" -->
    <!-- Outputs="$(TargetPath)" -->
    <Message Text="Performing the Ilmerge." />
    <!-- in this CreateItem stanza, we collect all the DLLs for the referenced projects -->
    <CreateItem Include="@(_ResolvedProjectReferencePaths)">
      <Output TaskParameter="Include" ItemName="AssembliesToMerge" />
    </CreateItem>
    <!-- This weird bit of hieroglyphics is the assemblies to merge, quoted, and separated by spaces -->
    <!-- Example:  "c:\foo\project1\bin\Debug\ProjectOne.dll"   "c:\foo\project2\bin\Debug\ProjectTwo.dll"  -->
    <Message Text="AssembliesToMerge= @(AssembliesToMerge -> '&quot;%(Fullpath)&quot;', ' ')" />
    <!-- Message Text="TargetPath= $(TargetPath)" / -->
    <Message Text="TargetFileName= $(TargetFileName)" />
    <!-- produce the merged assembly - putting the output in the "IntermediateOutputPath" eg obj\Debug. -->
    <!-- it will be copied later by the CopyFilestoOutputDirectory task defined in Microsoft.Common.Targets -->
    <Error Text="ILMerge cannot be found. You need to download and install ILMerge in order to build DotNetZip." Condition="!Exists('$(ProgramFiles)\Microsoft\Ilmerge\Ilmerge.exe')" />
    <Exec Command="&quot;$(ProgramFiles)\Microsoft\Ilmerge\Ilmerge.exe&quot; /keyfile:..\Ionic.snk  /t:library  /xmldocs /out:&quot;$(IntermediateOutputPath)$(TargetFileName)&quot;  @(AssembliesToMerge -> '&quot;%(Fullpath)&quot;', ' ') " />
    <!-- for some reason the XML doc file does not get copied automatically from obj\Debug to bin\Debug. -->
    <!-- we do it here explicitly. -->
    <Copy SourceFiles="$(IntermediateOutputPath)$(AssemblyName).XML" DestinationFolder="$(OutDir)" SkipUnchangedFiles="true" OverwriteReadOnlyFiles="$(OverwriteReadOnlyFiles)" />
  </Target>
  <Target Name="EchoTargetPath">
    <Message Text="TargetPath= $(TargetPath)" />
  </Target>
  <ItemGroup>
    <ProjectReference Include="..\Zip Partial DLL\Zip Partial DLL.csproj">
      <Project>{D3B0AD67-44D8-4B3D-BED9-CE1FD6DE2C5A}</Project>
      <Name>Zip Partial DLL</Name>
    </ProjectReference>
    <ProjectReference Include="..\Zlib\Zlib DLL.csproj">
      <Project>{9816BA86-9250-4C00-A912-25F07F8677D1}</Project>
      <Name>Zlib DLL</Name>
    </ProjectReference>
    <ProjectReference Include="..\BZip2\BZip2 DLL.csproj">
      <Project>{e2ce0d56-7af8-4404-bd0c-bc562cbd74d4}</Project>
      <Name>BZip2 DLL</Name>
    </ProjectReference>
  </ItemGroup>
</Project>
